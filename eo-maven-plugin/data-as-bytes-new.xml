<?xml version="1.0" encoding="UTF-8"?>
<program dob="2023-03-19T00:00:00"
         ms="1"
         name="scenario"
         revision="1234567"
         time="2023-11-29T09:42:44.245300Z"
         version="0.0-SNAPSHOT">
   <listing>[] &gt; t
  TRUE &gt; @
[] &gt; f
  bool FALSE &gt; @
[] &gt; i
  42 &gt; @
[] &gt; f
  float 3.5 &gt; @
[] &gt; b
  01-AF &gt; @
</listing>
   <errors/>
   <sheets>
      <sheet>add-default-package</sheet>
      <sheet>explicit-data</sheet>
      <sheet>classes</sheet>
      <sheet>attrs</sheet>
      <sheet>data</sheet>
      <sheet>to-java</sheet>
   </sheets>
   <license/>
   <metas/>
   <objects>
      <class abstract="" java-name="EOt" line="1" name="t" pos="0">
         <java>
/*  */
import org.eolang.*;

// &lt;o abstract="" line="1" name="t" pos="0"&gt;
//   &lt;o base="org.eolang.bool" line="2" name="@" pos="2"&gt;
//     &lt;o base="org.eolang.bytes" data="bytes"&gt;01&lt;/o&gt;
//   &lt;/o&gt;
// &lt;/o&gt;
@XmirObject(name = "t", oname = "t", source = "")
public final class EOt extends PhDefault {

  public EOt(final Phi sigma) {
    super(sigma);
    this.add("φ", new AtOnce(new AtComposite(this, rho -&gt; {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("bool").get();
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EObytes(Phi.Φ);
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value&lt;&gt;(new byte[] {(byte) 0x01}));
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhLocated(ret, 2, 2, "");
      return ret;
    })));
  }
}
</java>
      </class>
      <class abstract="" java-name="EOf" line="3" name="f" pos="0">
         <java>
/*  */
import org.eolang.*;

// &lt;o abstract="" line="3" name="f" pos="0"&gt;
//   &lt;o base="org.eolang.bool" line="4" name="@" pos="2"&gt;
//     &lt;o base="org.eolang.bytes" data="bytes"&gt;00&lt;/o&gt;
//   &lt;/o&gt;
// &lt;/o&gt;
@XmirObject(name = "f", oname = "f", source = "")
public final class EOf extends PhDefault {

  public EOf(final Phi sigma) {
    super(sigma);
    this.add("φ", new AtOnce(new AtComposite(this, rho -&gt; {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("bool").get();
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EObytes(Phi.Φ);
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value&lt;&gt;(new byte[] {(byte) 0x00}));
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhLocated(ret, 4, 2, "");
      return ret;
    })));
  }
}
</java>
      </class>
      <class abstract="" java-name="EOi" line="5" name="i" pos="0">
         <java>
/*  */
import org.eolang.*;

// &lt;o abstract="" line="5" name="i" pos="0"&gt;
//   &lt;o base="org.eolang.int" line="6" name="@" pos="2"&gt;
//     &lt;o base="org.eolang.bytes" data="bytes"&gt;00 00 00 00 00 00 00 2A&lt;/o&gt;
//   &lt;/o&gt;
// &lt;/o&gt;
@XmirObject(name = "i", oname = "i", source = "")
public final class EOi extends PhDefault {

  public EOi(final Phi sigma) {
    super(sigma);
    this.add("φ", new AtOnce(new AtComposite(this, rho -&gt; {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("int").get();
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EObytes(Phi.Φ);
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value&lt;&gt;(new byte[] {(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x2A}));
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhLocated(ret, 6, 2, "");
      return ret;
    })));
  }
}
</java>
      </class>
      <class abstract="" java-name="EOf" line="7" name="f" pos="0">
         <java>
/*  */
import org.eolang.*;

// &lt;o abstract="" line="7" name="f" pos="0"&gt;
//   &lt;o base="org.eolang.float" line="8" name="@" pos="2"&gt;
//     &lt;o base="org.eolang.bytes" data="bytes"&gt;40 0C 00 00 00 00 00 00&lt;/o&gt;
//   &lt;/o&gt;
// &lt;/o&gt;
@XmirObject(name = "f", oname = "f", source = "")
public final class EOf extends PhDefault {

  public EOf(final Phi sigma) {
    super(sigma);
    this.add("φ", new AtOnce(new AtComposite(this, rho -&gt; {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("float").get();
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EObytes(Phi.Φ);
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value&lt;&gt;(new byte[] {(byte) 0x40, (byte) 0x0C, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00}));
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhLocated(ret, 8, 2, "");
      return ret;
    })));
  }
}
</java>
      </class>
      <class abstract="" java-name="EOb" line="9" name="b" pos="0">
         <java>
/*  */
import org.eolang.*;

// &lt;o abstract="" line="9" name="b" pos="0"&gt;
//   &lt;o base="org.eolang.bytes" data="bytes" line="10" name="@" pos="2"&gt;01 AF&lt;/o&gt;
// &lt;/o&gt;
@XmirObject(name = "b", oname = "b", source = "")
public final class EOb extends PhDefault {

  public EOb(final Phi sigma) {
    super(sigma);
    this.add("φ", new AtOnce(new AtComposite(this, rho -&gt; {
      Phi ret = new EOorg.EOeolang.EObytes(Phi.Φ);
        ret = new PhWith(ret, "Δ", new Data.Value&lt;&gt;(new byte[] {(byte) 0x01, (byte) 0xAF}));
        ret = new PhLocated(ret, 10, 2, "");
      return ret;
    })));
  }
}
</java>
      </class>
   </objects>
</program>
