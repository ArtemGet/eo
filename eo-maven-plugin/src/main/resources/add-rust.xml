<?xml version="1.0" encoding="UTF-8"?>
<program dob="2023-11-18T18:10:49"
         ms="2552"
         name="org.eolang.rust-tests"
         revision="a1360df"
         source="/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/rust-tests.eo"
         time="2023-11-20T16:34:10.690201Z"
         version="1.0-SNAPSHOT">
    <listing># The MIT License (MIT)
        #
        # Copyright (c) 2016-2023 Objectionary.com
        #
        # Permission is hereby granted, free of charge, to any person obtaining a copy
        # of this software and associated documentation files (the "Software"), to deal
        # in the Software without restriction, including without limitation the rights
        # to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        # copies of the Software, and to permit persons to whom the Software is
        # furnished to do so, subject to the following conditions:
        #
        # The above copyright notice and this permission notice shall be included
        # in all copies or substantial portions of the Software.
        #
        # THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        # IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        # FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
        # AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        # LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        # OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        # SOFTWARE.

        +home https://github.com/objectionary/eo
        +tests
        +package org.eolang
        +version 0.0.0

        [] &gt; rust-returns-positive-int
        QQ.rust &gt; r
        """
        use eo::Portal;
        use eo::eo_enum::EO;
        use eo::eo_enum::EO::{EOInt};

        pub fn foo(_portal: &amp;mut Portal) -&gt; Option&lt;EO&gt; {
        println!("Hello world from rust");
        Some(EOInt(2))
        }
        """
        []
        *
        eq. &gt; @
        r
        2

        [] &gt; rust-returns-negative-int
        QQ.rust &gt; r
        """
        use eo::Portal;
        use eo::eo_enum::EO;
        use eo::eo_enum::EO::{EOInt};

        pub fn foo(_portal: &amp;mut Portal) -&gt; Option&lt;EO&gt; {
        println!("Hello world from rust");
        Some(EOInt(-10))
        }
        """
        []
        *
        eq. &gt; @
        r
        -10

        [] &gt; rust-returns-positive-double
        QQ.rust &gt; r
        """
        use eo::Portal;
        use eo::eo_enum::EO;
        use eo::eo_enum::EO::{EOFloat};

        pub fn foo(_portal: &amp;mut Portal) -&gt; Option&lt;EO&gt; {
        Some(EOFloat(1.23456789))
        }
        """
        []
        *
        eq. &gt; @
        r
        1.23456789

        [] &gt; rust-returns-negative-double
        QQ.rust &gt; r
        """
        use eo::Portal;
        use eo::eo_enum::EO;
        use eo::eo_enum::EO::{EOFloat};

        pub fn foo(_portal: &amp;mut Portal) -&gt; Option&lt;EO&gt; {
        Some(EOFloat(-1.23456789))
        }
        """
        []
        *
        eq. &gt; @
        r
        -1.23456789

        [] &gt; rust-is-byte-array
        QQ.rust &gt; my-bytes
        """
        use eo::Portal;
        use eo::eo_enum::EO;
        use eo::eo_enum::EO::{EORaw};

        pub fn foo(_portal: &amp;mut Portal) -&gt; Option&lt;EO&gt; {
        Some(
        EORaw(
        Box::from(
        [0x00, 0x1a, 0xEE]
        )
        )
        )
        }
        """
        []
        *
        eq. &gt; @
        my-bytes
        00-1A-EE

        [] &gt; rust-find-returns-int
        123 &gt; a
        QQ.rust &gt; r
        """
        use eo::Portal;
        use eo::eo_enum::EO;
        use eo::eo_enum::EO::{EOInt};

        pub fn foo(portal: &amp;mut Portal) -&gt; Option&lt;EO&gt; {
        Some(
        EOInt(portal.find("$.^.a")? as i64)
        )
        }
        """
        []
        *
        not. &gt; @
        lt.
        r
        0

        [] &gt; rust-returns-vertex
        "content" &gt; book
        QQ.rust &gt; read
        """
        use eo::Portal;
        use eo::eo_enum::EO;
        use eo::eo_enum::EO::{EOVertex};

        pub fn foo(portal: &amp;mut Portal) -&gt; Option&lt;EO&gt; {
        let v = portal.find("$.^.book")?;
        Some(EOVertex(v))
        }
        """
        []
        *
        eq. &gt; @
        read
        "content"

        [] &gt; rust-is-string
        QQ.rust &gt; content
        """
        use eo::Portal;
        use eo::eo_enum::EO;
        use eo::eo_enum::EO::{EOString};

        pub fn foo(_portal: &amp;mut Portal) -&gt; Option&lt;EO&gt; {
        Some(EOString("Привет world".to_string()))
        }
        """
        []
        *
        eq. &gt; @
        content
        "Привет world"

        [] &gt; rust-invalid-put
        QQ.rust &gt; put
        """
        use eo::Portal;
        use eo::eo_enum::EO;
        use eo::eo_enum::EO::{EOInt, EOError};
        pub fn foo(portal: &amp;mut Portal) -&gt; Option&lt;EO&gt; {
        portal.put(-1i32 as u32, &amp;[0x00, 0x1a, 0xEE, 0xf, 0xf3])?;
        Some(EOError("put failed".to_string()))
        }
        """
        []
        *
        eq. &gt; @
        slice.
        try
        []
        put &gt; @
        [e]
        e &gt; @
        nop
        0
        18
        "Rust insert failed"

        [] &gt; rust-bind-not-fails
        1 &gt; a
        2 &gt; b
        "Rust insert failed" &gt; to-check!
        QQ.rust &gt; insert
        """
        use eo::Portal;
        use eo::eo_enum::EO;
        use eo::eo_enum::EO::{EOInt};
        pub fn foo(portal: &amp;mut Portal) -&gt; Option&lt;EO&gt; {
        let v1 = portal.find("$.^.a")?;
        let v2 = portal.find("$.^.b")?;
        portal.bind(v1 , v2, "EO-att")?;
        Some(EOInt(0 as i64))
        }
        """
        []
        *
        try &gt; res!
        []
        insert &gt; @
        [e]
        e &gt; @
        nop
        eq. &gt; @
        res.slice
        0
        to-check.length
        to-check

        [] &gt; rust-copy-not-fails
        123 &gt; a
        QQ.rust &gt; copy
        """
        use eo::Portal;
        use eo::eo_enum::EO;
        use eo::eo_enum::EO::{EOVertex};
        pub fn foo(portal: &amp;mut Portal) -&gt; Option&lt;EO&gt; {
        let v = portal.find("$.^.a")?;
        let copy = portal.copy(v)?;
        Some(EOVertex(copy))
        }
        """
        []
        *
        eq. &gt; @
        copy
        123

        [] &gt; rust-dataize-not-fails
        1 &gt; a
        QQ.rust &gt; dataized
        """
        use eo::Portal;
        use eo::eo_enum::EO;
        use eo::eo_enum::EO::{EOInt};
        pub fn foo(portal: &amp;mut Portal) -&gt; Option&lt;EO&gt; {
        let v = portal.find("$.^.a")?;
        let _bytes = portal.dataize(v)?;
        Some(EOInt(v as i64))
        }
        """
        []
        *
        not. &gt; @
        lt.
        dataized
        0

        [] &gt; rust-plus
        5 &gt; a
        10 &gt; b
        QQ.rust &gt; plus
        """
        use eo::Portal;
        use eo::eo_enum::EO;
        use eo::eo_enum::EO::{EOInt};
        use byteorder::{BigEndian, ReadBytesExt};

        pub fn foo(portal: &amp;mut Portal) -&gt; Option&lt;EO&gt; {
        let a = portal.find("$.^.a")?;
        let bytes_a = portal.dataize(a)?;
        let a = bytes_a.as_slice().read_i64::&lt;BigEndian&gt;().ok()?;

        let b = portal.find("$.^.b")?;
        let bytes_b = portal.dataize(b)?;
        let b = bytes_b.as_slice().read_i64::&lt;BigEndian&gt;().ok()?;
        println!("sum 5 + 10 = {}", a + b);

        Some(EOInt(a + b))
        }
        """
        []
        *
        "byteorder:1.4.3"
        eq. &gt; @
        plus
        15

        [] &gt; rust-error
        "Rust insert failed " &gt; message!
        QQ.rust &gt; err!
        """
        use eo::Portal;
        use eo::eo_enum::EO;
        use eo::eo_enum::EO::{EOError};

        pub fn foo(_portal: &amp;mut Portal) -&gt; Option&lt;EO&gt; {
        Some(EOError("Custom error".to_string()))
        }
        """
        []
        *
        try &gt; res
        []
        err &gt; @
        [e]
        e &gt; @
        nop
        eq. &gt; @
        slice.
        res
        0
        length.
        message
        message

        [] &gt; rust-put-to-copy
        QQ.rust &gt; data
        """
        use eo::Portal;
        use eo::eo_enum::EO;
        use eo::eo_enum::EO::{EOVertex, EOError};

        pub fn foo(portal: &amp;mut Portal) -&gt; Option&lt;EO&gt; {
        let eobytes = portal.find("Q.org.eolang.bytes")?;
        let copy = portal.copy(eobytes)?;
        portal.put(copy.clone(), &amp;[0x00, 0x1a, 0xEE])?;
        Some(EOVertex(copy))
        }
        """
        []
        *
        eq. &gt; @
        data
        00-1A-EE

        [] &gt; rust-bind-to-copy
        [content] &gt; book
        "qwerty" &gt; line
        QQ.rust &gt; applied
        """
        use eo::Portal;
        use eo::eo_enum::EO;
        use eo::eo_enum::EO::{EOVertex};

        pub fn foo(portal: &amp;mut Portal) -&gt; Option&lt;EO&gt; {
        let eobook = portal.find("$.^.book")?;
        let copy = portal.copy(eobook)?;
        let eoline = portal.find("$.^.line")?;
        portal.bind(copy.clone(), eoline, "content")?;
        Some(EOVertex(copy))
        }
        """
        []
        *
        eq. &gt; @
        applied.content
        "qwerty"
    </listing>
    <errors>
        <error check="sparse-decoration"
               line="194"
               severity="warning"
               sheet="sparse-decoration"
               step="0">Sparse decoration is prohibited</error>
        <error check="sparse-decoration"
               line="222"
               severity="warning"
               sheet="sparse-decoration"
               step="0">Sparse decoration is prohibited</error>
        <error check="sparse-decoration"
               line="317"
               severity="warning"
               sheet="sparse-decoration"
               step="0">Sparse decoration is prohibited</error>
        <error check="prohibited-package"
               line="25"
               severity="warning"
               sheet="prohibited-package"
               step="0">Package org.eolang is reserved for internal object only</error>
    </errors>
    <sheets>
        <sheet>not-empty-atoms</sheet>
        <sheet>duplicate-names</sheet>
        <sheet>many-free-attributes</sheet>
        <sheet>broken-aliases</sheet>
        <sheet>duplicate-aliases</sheet>
        <sheet>global-nonames</sheet>
        <sheet>same-line-names</sheet>
        <sheet>self-naming</sheet>
        <sheet>cti-adds-errors</sheet>
        <sheet>add-refs</sheet>
        <sheet>wrap-method-calls</sheet>
        <sheet>expand-qqs</sheet>
        <sheet>add-probes</sheet>
        <sheet>vars-float-up</sheet>
        <sheet>add-refs</sheet>
        <sheet>sparse-decoration</sheet>
        <sheet>unsorted-metas</sheet>
        <sheet>incorrect-architect</sheet>
        <sheet>incorrect-home</sheet>
        <sheet>incorrect-version</sheet>
        <sheet>expand-aliases</sheet>
        <sheet>resolve-aliases</sheet>
        <sheet>add-refs</sheet>
        <sheet>add-default-package</sheet>
        <sheet>broken-refs</sheet>
        <sheet>unknown-names</sheet>
        <sheet>noname-attributes</sheet>
        <sheet>duplicate-names</sheet>
        <sheet>duplicate-metas</sheet>
        <sheet>mandatory-package-meta</sheet>
        <sheet>mandatory-home-meta</sheet>
        <sheet>mandatory-version-meta</sheet>
        <sheet>correct-package-meta</sheet>
        <sheet>prohibited-package</sheet>
        <sheet>external-weak-typed-atoms</sheet>
        <sheet>unused-aliases</sheet>
        <sheet>unit-test-without-phi</sheet>
        <sheet>explicit-data</sheet>
        <sheet>set-locators</sheet>
        <sheet>add_rust</sheet>
    </sheets>
    <license>The MIT License (MIT)

        Copyright (c) 2016-2023 Objectionary.com

        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:

        The above copyright notice and this permission notice shall be included
        in all copies or substantial portions of the Software.

        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.</license>
    <metas>
        <meta line="23">
            <head>home</head>
            <tail>https://github.com/objectionary/eo</tail>
            <part>https://github.com/objectionary/eo</part>
        </meta>
        <meta line="24">
            <head>tests</head>
            <tail/>
        </meta>
        <meta line="25">
            <head>package</head>
            <tail>org.eolang</tail>
            <part>org.eolang</part>
        </meta>
        <meta line="26">
            <head>version</head>
            <tail>0.0.0</tail>
            <part>0.0.0</part>
        </meta>
        <meta line="137">
            <head>probe</head>
            <tail>r.lt.not</tail>
            <part>r.lt.not</part>
        </meta>
        <meta line="191">
            <head>probe</head>
            <tail>try.slice.eq</tail>
            <part>try.slice.eq</part>
        </meta>
        <meta line="267">
            <head>probe</head>
            <tail>dataized.lt.not</tail>
            <part>dataized.lt.not</part>
        </meta>
        <meta line="322">
            <head>probe</head>
            <tail>res.slice.eq</tail>
            <part>res.slice.eq</part>
        </meta>
        <meta line="353">
            <head>probe</head>
            <tail>Q.org.eolang.rust</tail>
            <part>Q.org.eolang.rust</part>
        </meta>
        <meta line="353">
            <head>probe</head>
            <tail>Q.org.eolang</tail>
            <part>Q.org.eolang</part>
        </meta>
        <meta line="369">
            <head>probe</head>
            <tail>applied.content.eq</tail>
            <part>applied.content.eq</part>
        </meta>
    </metas>
    <objects>
        <o abstract=""
           line="28"
           loc="Φ.org.eolang.rust-returns-positive-int"
           name="rust-returns-positive-int"
           original-name="rust-returns-positive-int"
           pos="0">
            <o base=".rust"
               line="29"
               loc="Φ.org.eolang.rust-returns-positive-int.r"
               name="r"
               pos="4">
                <o base=".eolang"
                   line="29"
                   loc="Φ.org.eolang.rust-returns-positive-int.r.ρ"
                   pos="2">
                    <o base=".org"
                       line="29"
                       loc="Φ.org.eolang.rust-returns-positive-int.r.ρ.ρ"
                       pos="2">
                        <o base="Q"
                           line="29"
                           loc="Φ.org.eolang.rust-returns-positive-int.r.ρ.ρ.ρ"
                           pos="2"/>
                    </o>
                </o>
                <o base="org.eolang.string"
                   line="30"
                   loc="Φ.org.eolang.rust-returns-positive-int.r.α0"
                   pos="4">
                    <o base="org.eolang.bytes"
                       data="bytes"
                       loc="Φ.org.eolang.rust-returns-positive-int.r.α0.α0">75 73 65 20 65 6F 3A 3A 50 6F 72 74 61 6C 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3A 3A 7B 45 4F 49 6E 74 7D 3B 0A 0A 70 75 62 20 66 6E 20 66 6F 6F 28 5F 70 6F 72 74 61 6C 3A 20 26 6D 75 74 20 50 6F 72 74 61 6C 29 20 2D 3E 20 4F 70 74 69 6F 6E 3C 45 4F 3E 20 7B 0A 20 20 70 72 69 6E 74 6C 6E 21 28 22 48 65 6C 6C 6F 20 77 6F 72 6C 64 20 66 72 6F 6D 20 72 75 73 74 22 29 3B 0A 20 20 53 6F 6D 65 28 45 4F 49 6E 74 28 32 29 29 0A 7D</o>
                </o>
                <o base="rust-returns-positive-int$t0$a2"
                   cut="5"
                   line="40"
                   loc="Φ.org.eolang.rust-returns-positive-int.r.α1"
                   pos="4"
                   ref="40"/>
                <o base="org.eolang.tuple"
                   line="41"
                   loc="Φ.org.eolang.rust-returns-positive-int.r.α2"
                   pos="4"/>
            </o>
            <o base=".eq"
               line="42"
               loc="Φ.org.eolang.rust-returns-positive-int.φ"
               name="@"
               pos="2">
                <o base="r"
                   line="43"
                   loc="Φ.org.eolang.rust-returns-positive-int.φ.ρ"
                   pos="4"
                   ref="29"/>
                <o base="org.eolang.int"
                   line="44"
                   loc="Φ.org.eolang.rust-returns-positive-int.φ.α0"
                   pos="4">
                    <o base="org.eolang.bytes"
                       data="bytes"
                       loc="Φ.org.eolang.rust-returns-positive-int.φ.α0.α0">00 00 00 00 00 00 00 02</o>
                </o>
            </o>
        </o>
        <o abstract=""
           ancestors="1"
           line="40"
           loc="Φ.org.eolang.rust-returns-positive-int$t0$a2"
           name="rust-returns-positive-int$t0$a2"
           parent="rust-returns-positive-int"
           pos="4"/>
        <o abstract=""
           line="46"
           loc="Φ.org.eolang.rust-returns-negative-int"
           name="rust-returns-negative-int"
           original-name="rust-returns-negative-int"
           pos="0">
            <o base=".rust"
               line="47"
               loc="Φ.org.eolang.rust-returns-negative-int.r"
               name="r"
               pos="4">
                <o base=".eolang"
                   line="47"
                   loc="Φ.org.eolang.rust-returns-negative-int.r.ρ"
                   pos="2">
                    <o base=".org"
                       line="47"
                       loc="Φ.org.eolang.rust-returns-negative-int.r.ρ.ρ"
                       pos="2">
                        <o base="Q"
                           line="47"
                           loc="Φ.org.eolang.rust-returns-negative-int.r.ρ.ρ.ρ"
                           pos="2"/>
                    </o>
                </o>
                <o base="org.eolang.string"
                   line="48"
                   loc="Φ.org.eolang.rust-returns-negative-int.r.α0"
                   pos="4">
                    <o base="org.eolang.bytes"
                       data="bytes"
                       loc="Φ.org.eolang.rust-returns-negative-int.r.α0.α0">75 73 65 20 65 6F 3A 3A 50 6F 72 74 61 6C 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3A 3A 7B 45 4F 49 6E 74 7D 3B 0A 0A 70 75 62 20 66 6E 20 66 6F 6F 28 5F 70 6F 72 74 61 6C 3A 20 26 6D 75 74 20 50 6F 72 74 61 6C 29 20 2D 3E 20 4F 70 74 69 6F 6E 3C 45 4F 3E 20 7B 0A 20 20 70 72 69 6E 74 6C 6E 21 28 22 48 65 6C 6C 6F 20 77 6F 72 6C 64 20 66 72 6F 6D 20 72 75 73 74 22 29 3B 0A 20 20 53 6F 6D 65 28 45 4F 49 6E 74 28 2D 31 30 29 29 0A 7D</o>
                </o>
                <o base="rust-returns-negative-int$t0$a2"
                   cut="18"
                   line="58"
                   loc="Φ.org.eolang.rust-returns-negative-int.r.α1"
                   pos="4"
                   ref="58"/>
                <o base="org.eolang.tuple"
                   line="59"
                   loc="Φ.org.eolang.rust-returns-negative-int.r.α2"
                   pos="4"/>
            </o>
            <o base=".eq"
               line="60"
               loc="Φ.org.eolang.rust-returns-negative-int.φ"
               name="@"
               pos="2">
                <o base="r"
                   line="61"
                   loc="Φ.org.eolang.rust-returns-negative-int.φ.ρ"
                   pos="4"
                   ref="47"/>
                <o base="org.eolang.int"
                   line="62"
                   loc="Φ.org.eolang.rust-returns-negative-int.φ.α0"
                   pos="4">
                    <o base="org.eolang.bytes"
                       data="bytes"
                       loc="Φ.org.eolang.rust-returns-negative-int.φ.α0.α0">FF FF FF FF FF FF FF F6</o>
                </o>
            </o>
        </o>
        <o abstract=""
           ancestors="1"
           line="58"
           loc="Φ.org.eolang.rust-returns-negative-int$t0$a2"
           name="rust-returns-negative-int$t0$a2"
           parent="rust-returns-negative-int"
           pos="4"/>
        <o abstract=""
           line="64"
           loc="Φ.org.eolang.rust-returns-positive-double"
           name="rust-returns-positive-double"
           original-name="rust-returns-positive-double"
           pos="0">
            <o base=".rust"
               line="65"
               loc="Φ.org.eolang.rust-returns-positive-double.r"
               name="r"
               pos="4">
                <o base=".eolang"
                   line="65"
                   loc="Φ.org.eolang.rust-returns-positive-double.r.ρ"
                   pos="2">
                    <o base=".org"
                       line="65"
                       loc="Φ.org.eolang.rust-returns-positive-double.r.ρ.ρ"
                       pos="2">
                        <o base="Q"
                           line="65"
                           loc="Φ.org.eolang.rust-returns-positive-double.r.ρ.ρ.ρ"
                           pos="2"/>
                    </o>
                </o>
                <o base="org.eolang.string"
                   line="66"
                   loc="Φ.org.eolang.rust-returns-positive-double.r.α0"
                   pos="4">
                    <o base="org.eolang.bytes"
                       data="bytes"
                       loc="Φ.org.eolang.rust-returns-positive-double.r.α0.α0">75 73 65 20 65 6F 3A 3A 50 6F 72 74 61 6C 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3A 3A 7B 45 4F 46 6C 6F 61 74 7D 3B 0A 0A 70 75 62 20 66 6E 20 66 6F 6F 28 5F 70 6F 72 74 61 6C 3A 20 26 6D 75 74 20 50 6F 72 74 61 6C 29 20 2D 3E 20 4F 70 74 69 6F 6E 3C 45 4F 3E 20 7B 0A 20 20 53 6F 6D 65 28 45 4F 46 6C 6F 61 74 28 31 2E 32 33 34 35 36 37 38 39 29 29 0A 7D</o>
                </o>
                <o base="rust-returns-positive-double$t0$a2"
                   cut="31"
                   line="75"
                   loc="Φ.org.eolang.rust-returns-positive-double.r.α1"
                   pos="4"
                   ref="75"/>
                <o base="org.eolang.tuple"
                   line="76"
                   loc="Φ.org.eolang.rust-returns-positive-double.r.α2"
                   pos="4"/>
            </o>
            <o base=".eq"
               line="77"
               loc="Φ.org.eolang.rust-returns-positive-double.φ"
               name="@"
               pos="2">
                <o base="r"
                   line="78"
                   loc="Φ.org.eolang.rust-returns-positive-double.φ.ρ"
                   pos="4"
                   ref="65"/>
                <o base="org.eolang.float"
                   line="79"
                   loc="Φ.org.eolang.rust-returns-positive-double.φ.α0"
                   pos="4">
                    <o base="org.eolang.bytes"
                       data="bytes"
                       loc="Φ.org.eolang.rust-returns-positive-double.φ.α0.α0">3F F3 C0 CA 42 83 DE 1B</o>
                </o>
            </o>
        </o>
        <o abstract=""
           ancestors="1"
           line="75"
           loc="Φ.org.eolang.rust-returns-positive-double$t0$a2"
           name="rust-returns-positive-double$t0$a2"
           parent="rust-returns-positive-double"
           pos="4"/>
        <o abstract=""
           line="81"
           loc="Φ.org.eolang.rust-returns-negative-double"
           name="rust-returns-negative-double"
           original-name="rust-returns-negative-double"
           pos="0">
            <o base=".rust"
               line="82"
               loc="Φ.org.eolang.rust-returns-negative-double.r"
               name="r"
               pos="4">
                <o base=".eolang"
                   line="82"
                   loc="Φ.org.eolang.rust-returns-negative-double.r.ρ"
                   pos="2">
                    <o base=".org"
                       line="82"
                       loc="Φ.org.eolang.rust-returns-negative-double.r.ρ.ρ"
                       pos="2">
                        <o base="Q"
                           line="82"
                           loc="Φ.org.eolang.rust-returns-negative-double.r.ρ.ρ.ρ"
                           pos="2"/>
                    </o>
                </o>
                <o base="org.eolang.string"
                   line="83"
                   loc="Φ.org.eolang.rust-returns-negative-double.r.α0"
                   pos="4">
                    <o base="org.eolang.bytes"
                       data="bytes"
                       loc="Φ.org.eolang.rust-returns-negative-double.r.α0.α0">75 73 65 20 65 6F 3A 3A 50 6F 72 74 61 6C 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3A 3A 7B 45 4F 46 6C 6F 61 74 7D 3B 0A 0A 70 75 62 20 66 6E 20 66 6F 6F 28 5F 70 6F 72 74 61 6C 3A 20 26 6D 75 74 20 50 6F 72 74 61 6C 29 20 2D 3E 20 4F 70 74 69 6F 6E 3C 45 4F 3E 20 7B 0A 20 20 53 6F 6D 65 28 45 4F 46 6C 6F 61 74 28 2D 31 2E 32 33 34 35 36 37 38 39 29 29 0A 7D</o>
                </o>
                <o base="rust-returns-negative-double$t0$a2"
                   cut="44"
                   line="92"
                   loc="Φ.org.eolang.rust-returns-negative-double.r.α1"
                   pos="4"
                   ref="92"/>
                <o base="org.eolang.tuple"
                   line="93"
                   loc="Φ.org.eolang.rust-returns-negative-double.r.α2"
                   pos="4"/>
            </o>
            <o base=".eq"
               line="94"
               loc="Φ.org.eolang.rust-returns-negative-double.φ"
               name="@"
               pos="2">
                <o base="r"
                   line="95"
                   loc="Φ.org.eolang.rust-returns-negative-double.φ.ρ"
                   pos="4"
                   ref="82"/>
                <o base="org.eolang.float"
                   line="96"
                   loc="Φ.org.eolang.rust-returns-negative-double.φ.α0"
                   pos="4">
                    <o base="org.eolang.bytes"
                       data="bytes"
                       loc="Φ.org.eolang.rust-returns-negative-double.φ.α0.α0">BF F3 C0 CA 42 83 DE 1B</o>
                </o>
            </o>
        </o>
        <o abstract=""
           ancestors="1"
           line="92"
           loc="Φ.org.eolang.rust-returns-negative-double$t0$a2"
           name="rust-returns-negative-double$t0$a2"
           parent="rust-returns-negative-double"
           pos="4"/>
        <o abstract=""
           line="98"
           loc="Φ.org.eolang.rust-is-byte-array"
           name="rust-is-byte-array"
           original-name="rust-is-byte-array"
           pos="0">
            <o base=".rust"
               line="99"
               loc="Φ.org.eolang.rust-is-byte-array.my-bytes"
               name="my-bytes"
               pos="4">
                <o base=".eolang"
                   line="99"
                   loc="Φ.org.eolang.rust-is-byte-array.my-bytes.ρ"
                   pos="2">
                    <o base=".org"
                       line="99"
                       loc="Φ.org.eolang.rust-is-byte-array.my-bytes.ρ.ρ"
                       pos="2">
                        <o base="Q"
                           line="99"
                           loc="Φ.org.eolang.rust-is-byte-array.my-bytes.ρ.ρ.ρ"
                           pos="2"/>
                    </o>
                </o>
                <o base="org.eolang.string"
                   line="100"
                   loc="Φ.org.eolang.rust-is-byte-array.my-bytes.α0"
                   pos="4">
                    <o base="org.eolang.bytes"
                       data="bytes"
                       loc="Φ.org.eolang.rust-is-byte-array.my-bytes.α0.α0">75 73 65 20 65 6F 3A 3A 50 6F 72 74 61 6C 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3A 3A 7B 45 4F 52 61 77 7D 3B 0A 0A 70 75 62 20 66 6E 20 66 6F 6F 28 5F 70 6F 72 74 61 6C 3A 20 26 6D 75 74 20 50 6F 72 74 61 6C 29 20 2D 3E 20 4F 70 74 69 6F 6E 3C 45 4F 3E 20 7B 0A 20 20 53 6F 6D 65 28 0A 45 4F 52 61 77 28 0A 20 20 42 6F 78 3A 3A 66 72 6F 6D 28 0A 5B 30 78 30 30 2C 20 30 78 31 61 2C 20 30 78 45 45 5D 0A 20 20 29 0A 29 0A 20 20 29 0A 7D</o>
                </o>
                <o base="rust-is-byte-array$t0$a2"
                   cut="57"
                   line="115"
                   loc="Φ.org.eolang.rust-is-byte-array.my-bytes.α1"
                   pos="4"
                   ref="115"/>
                <o base="org.eolang.tuple"
                   line="116"
                   loc="Φ.org.eolang.rust-is-byte-array.my-bytes.α2"
                   pos="4"/>
            </o>
            <o base=".eq"
               line="117"
               loc="Φ.org.eolang.rust-is-byte-array.φ"
               name="@"
               pos="2">
                <o base="my-bytes"
                   line="118"
                   loc="Φ.org.eolang.rust-is-byte-array.φ.ρ"
                   pos="4"
                   ref="99"/>
                <o base="org.eolang.bytes"
                   data="bytes"
                   line="119"
                   loc="Φ.org.eolang.rust-is-byte-array.φ.α0"
                   pos="4">00 1A EE</o>
            </o>
        </o>
        <o abstract=""
           ancestors="1"
           line="115"
           loc="Φ.org.eolang.rust-is-byte-array$t0$a2"
           name="rust-is-byte-array$t0$a2"
           parent="rust-is-byte-array"
           pos="4"/>
        <o abstract=""
           line="121"
           loc="Φ.org.eolang.rust-find-returns-int"
           name="rust-find-returns-int"
           original-name="rust-find-returns-int"
           pos="0">
            <o base="org.eolang.int"
               line="122"
               loc="Φ.org.eolang.rust-find-returns-int.a"
               name="a"
               pos="2">
                <o base="org.eolang.bytes"
                   data="bytes"
                   loc="Φ.org.eolang.rust-find-returns-int.a.α0">00 00 00 00 00 00 00 7B</o>
            </o>
            <o base=".rust"
               line="123"
               loc="Φ.org.eolang.rust-find-returns-int.r"
               name="r"
               pos="4">
                <o base=".eolang"
                   line="123"
                   loc="Φ.org.eolang.rust-find-returns-int.r.ρ"
                   pos="2">
                    <o base=".org"
                       line="123"
                       loc="Φ.org.eolang.rust-find-returns-int.r.ρ.ρ"
                       pos="2">
                        <o base="Q"
                           line="123"
                           loc="Φ.org.eolang.rust-find-returns-int.r.ρ.ρ.ρ"
                           pos="2"/>
                    </o>
                </o>
                <o base="org.eolang.string"
                   line="124"
                   loc="Φ.org.eolang.rust-find-returns-int.r.α0"
                   pos="4">
                    <o base="org.eolang.bytes"
                       data="bytes"
                       loc="Φ.org.eolang.rust-find-returns-int.r.α0.α0">75 73 65 20 65 6F 3A 3A 50 6F 72 74 61 6C 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3A 3A 7B 45 4F 49 6E 74 7D 3B 0A 0A 70 75 62 20 66 6E 20 66 6F 6F 28 70 6F 72 74 61 6C 3A 20 26 6D 75 74 20 50 6F 72 74 61 6C 29 20 2D 3E 20 4F 70 74 69 6F 6E 3C 45 4F 3E 20 7B 0A 20 20 53 6F 6D 65 28 0A 45 4F 49 6E 74 28 70 6F 72 74 61 6C 2E 66 69 6E 64 28 22 24 2E 5E 2E 61 22 29 3F 20 61 73 20 69 36 34 29 0A 20 20 29 0A 7D</o>
                </o>
                <o base="rust-find-returns-int$t1$a2"
                   cut="71"
                   line="135"
                   loc="Φ.org.eolang.rust-find-returns-int.r.α1"
                   pos="4"
                   ref="135"/>
                <o base="org.eolang.tuple"
                   line="136"
                   loc="Φ.org.eolang.rust-find-returns-int.r.α2"
                   pos="4"/>
            </o>
            <o base=".not"
               line="137"
               loc="Φ.org.eolang.rust-find-returns-int.φ"
               name="@"
               pos="2">
                <o base=".lt"
                   line="138"
                   loc="Φ.org.eolang.rust-find-returns-int.φ.ρ"
                   pos="4">
                    <o base="r"
                       line="139"
                       loc="Φ.org.eolang.rust-find-returns-int.φ.ρ.ρ"
                       pos="6"
                       ref="123"/>
                    <o base="org.eolang.int"
                       line="140"
                       loc="Φ.org.eolang.rust-find-returns-int.φ.ρ.α0"
                       pos="6">
                        <o base="org.eolang.bytes"
                           data="bytes"
                           loc="Φ.org.eolang.rust-find-returns-int.φ.ρ.α0.α0">00 00 00 00 00 00 00 00</o>
                    </o>
                </o>
            </o>
        </o>
        <o abstract=""
           ancestors="1"
           line="135"
           loc="Φ.org.eolang.rust-find-returns-int$t1$a2"
           name="rust-find-returns-int$t1$a2"
           parent="rust-find-returns-int"
           pos="4"/>
        <o abstract=""
           line="142"
           loc="Φ.org.eolang.rust-returns-vertex"
           name="rust-returns-vertex"
           original-name="rust-returns-vertex"
           pos="0">
            <o base="org.eolang.string"
               line="143"
               loc="Φ.org.eolang.rust-returns-vertex.book"
               name="book"
               pos="2">
                <o base="org.eolang.bytes"
                   data="bytes"
                   loc="Φ.org.eolang.rust-returns-vertex.book.α0">63 6F 6E 74 65 6E 74</o>
            </o>
            <o base=".rust"
               line="144"
               loc="Φ.org.eolang.rust-returns-vertex.read"
               name="read"
               pos="4">
                <o base=".eolang"
                   line="144"
                   loc="Φ.org.eolang.rust-returns-vertex.read.ρ"
                   pos="2">
                    <o base=".org"
                       line="144"
                       loc="Φ.org.eolang.rust-returns-vertex.read.ρ.ρ"
                       pos="2">
                        <o base="Q"
                           line="144"
                           loc="Φ.org.eolang.rust-returns-vertex.read.ρ.ρ.ρ"
                           pos="2"/>
                    </o>
                </o>
                <o base="org.eolang.string"
                   line="145"
                   loc="Φ.org.eolang.rust-returns-vertex.read.α0"
                   pos="4">
                    <o base="org.eolang.bytes"
                       data="bytes"
                       loc="Φ.org.eolang.rust-returns-vertex.read.α0.α0">75 73 65 20 65 6F 3A 3A 50 6F 72 74 61 6C 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3A 3A 7B 45 4F 56 65 72 74 65 78 7D 3B 0A 0A 70 75 62 20 66 6E 20 66 6F 6F 28 70 6F 72 74 61 6C 3A 20 26 6D 75 74 20 50 6F 72 74 61 6C 29 20 2D 3E 20 4F 70 74 69 6F 6E 3C 45 4F 3E 20 7B 0A 20 20 6C 65 74 20 76 20 3D 20 70 6F 72 74 61 6C 2E 66 69 6E 64 28 22 24 2E 5E 2E 62 6F 6F 6B 22 29 3F 3B 0A 20 20 53 6F 6D 65 28 45 4F 56 65 72 74 65 78 28 76 29 29 0A 7D</o>
                </o>
                <o base="rust-returns-vertex$t1$a2"
                   cut="87"
                   line="155"
                   loc="Φ.org.eolang.rust-returns-vertex.read.α1"
                   pos="4"
                   ref="155"/>
                <o base="org.eolang.tuple"
                   line="156"
                   loc="Φ.org.eolang.rust-returns-vertex.read.α2"
                   pos="4"/>
            </o>
            <o base=".eq"
               line="157"
               loc="Φ.org.eolang.rust-returns-vertex.φ"
               name="@"
               pos="2">
                <o base="read"
                   line="158"
                   loc="Φ.org.eolang.rust-returns-vertex.φ.ρ"
                   pos="4"
                   ref="144"/>
                <o base="org.eolang.string"
                   line="159"
                   loc="Φ.org.eolang.rust-returns-vertex.φ.α0"
                   pos="4">
                    <o base="org.eolang.bytes"
                       data="bytes"
                       loc="Φ.org.eolang.rust-returns-vertex.φ.α0.α0">63 6F 6E 74 65 6E 74</o>
                </o>
            </o>
        </o>
        <o abstract=""
           ancestors="1"
           line="155"
           loc="Φ.org.eolang.rust-returns-vertex$t1$a2"
           name="rust-returns-vertex$t1$a2"
           parent="rust-returns-vertex"
           pos="4"/>
        <o abstract=""
           line="161"
           loc="Φ.org.eolang.rust-is-string"
           name="rust-is-string"
           original-name="rust-is-string"
           pos="0">
            <o base=".rust"
               line="162"
               loc="Φ.org.eolang.rust-is-string.content"
               name="content"
               pos="4">
                <o base=".eolang"
                   line="162"
                   loc="Φ.org.eolang.rust-is-string.content.ρ"
                   pos="2">
                    <o base=".org"
                       line="162"
                       loc="Φ.org.eolang.rust-is-string.content.ρ.ρ"
                       pos="2">
                        <o base="Q"
                           line="162"
                           loc="Φ.org.eolang.rust-is-string.content.ρ.ρ.ρ"
                           pos="2"/>
                    </o>
                </o>
                <o base="org.eolang.string"
                   line="163"
                   loc="Φ.org.eolang.rust-is-string.content.α0"
                   pos="4">
                    <o base="org.eolang.bytes"
                       data="bytes"
                       loc="Φ.org.eolang.rust-is-string.content.α0.α0">75 73 65 20 65 6F 3A 3A 50 6F 72 74 61 6C 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3A 3A 7B 45 4F 53 74 72 69 6E 67 7D 3B 0A 0A 70 75 62 20 66 6E 20 66 6F 6F 28 5F 70 6F 72 74 61 6C 3A 20 26 6D 75 74 20 50 6F 72 74 61 6C 29 20 2D 3E 20 4F 70 74 69 6F 6E 3C 45 4F 3E 20 7B 0A 20 20 53 6F 6D 65 28 45 4F 53 74 72 69 6E 67 28 22 D0 9F D1 80 D0 B8 D0 B2 D0 B5 D1 82 20 77 6F 72 6C 64 22 2E 74 6F 5F 73 74 72 69 6E 67 28 29 29 29 0A 7D</o>
                </o>
                <o base="rust-is-string$t0$a2"
                   cut="100"
                   line="172"
                   loc="Φ.org.eolang.rust-is-string.content.α1"
                   pos="4"
                   ref="172"/>
                <o base="org.eolang.tuple"
                   line="173"
                   loc="Φ.org.eolang.rust-is-string.content.α2"
                   pos="4"/>
            </o>
            <o base=".eq"
               line="174"
               loc="Φ.org.eolang.rust-is-string.φ"
               name="@"
               pos="2">
                <o base="content"
                   line="175"
                   loc="Φ.org.eolang.rust-is-string.φ.ρ"
                   pos="4"
                   ref="162"/>
                <o base="org.eolang.string"
                   line="176"
                   loc="Φ.org.eolang.rust-is-string.φ.α0"
                   pos="4">
                    <o base="org.eolang.bytes"
                       data="bytes"
                       loc="Φ.org.eolang.rust-is-string.φ.α0.α0">D0 9F D1 80 D0 B8 D0 B2 D0 B5 D1 82 20 77 6F 72 6C 64</o>
                </o>
            </o>
        </o>
        <o abstract=""
           ancestors="1"
           line="172"
           loc="Φ.org.eolang.rust-is-string$t0$a2"
           name="rust-is-string$t0$a2"
           parent="rust-is-string"
           pos="4"/>
        <o abstract=""
           line="178"
           loc="Φ.org.eolang.rust-invalid-put"
           name="rust-invalid-put"
           original-name="rust-invalid-put"
           pos="0">
            <o base=".rust"
               line="179"
               loc="Φ.org.eolang.rust-invalid-put.put"
               name="put"
               pos="4">
                <o base=".eolang"
                   line="179"
                   loc="Φ.org.eolang.rust-invalid-put.put.ρ"
                   pos="2">
                    <o base=".org"
                       line="179"
                       loc="Φ.org.eolang.rust-invalid-put.put.ρ.ρ"
                       pos="2">
                        <o base="Q"
                           line="179"
                           loc="Φ.org.eolang.rust-invalid-put.put.ρ.ρ.ρ"
                           pos="2"/>
                    </o>
                </o>
                <o base="org.eolang.string"
                   line="180"
                   loc="Φ.org.eolang.rust-invalid-put.put.α0"
                   pos="4">
                    <o base="org.eolang.bytes"
                       data="bytes"
                       loc="Φ.org.eolang.rust-invalid-put.put.α0.α0">75 73 65 20 65 6F 3A 3A 50 6F 72 74 61 6C 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3A 3A 7B 45 4F 49 6E 74 2C 20 45 4F 45 72 72 6F 72 7D 3B 0A 70 75 62 20 66 6E 20 66 6F 6F 28 70 6F 72 74 61 6C 3A 20 26 6D 75 74 20 50 6F 72 74 61 6C 29 20 2D 3E 20 4F 70 74 69 6F 6E 3C 45 4F 3E 20 7B 0A 20 20 70 6F 72 74 61 6C 2E 70 75 74 28 2D 31 69 33 32 20 61 73 20 75 33 32 2C 20 26 5B 30 78 30 30 2C 20 30 78 31 61 2C 20 30 78 45 45 2C 20 30 78 66 2C 20 30 78 66 33 5D 29 3F 3B 0A 20 20 53 6F 6D 65 28 45 4F 45 72 72 6F 72 28 22 70 75 74 20 66 61 69 6C 65 64 22 2E 74 6F 5F 73 74 72 69 6E 67 28 29 29 29 0A 7D</o>
                </o>
                <o base="rust-invalid-put$t0$a2"
                   cut="113"
                   line="189"
                   loc="Φ.org.eolang.rust-invalid-put.put.α1"
                   pos="4"
                   ref="189"/>
                <o base="org.eolang.tuple"
                   line="190"
                   loc="Φ.org.eolang.rust-invalid-put.put.α2"
                   pos="4"/>
            </o>
            <o base=".eq"
               line="191"
               loc="Φ.org.eolang.rust-invalid-put.φ"
               name="@"
               pos="2">
                <o base=".slice"
                   line="192"
                   loc="Φ.org.eolang.rust-invalid-put.φ.ρ"
                   pos="4">
                    <o base="org.eolang.try"
                       line="193"
                       loc="Φ.org.eolang.rust-invalid-put.φ.ρ.ρ"
                       pos="6">
                        <o base="rust-invalid-put$t1$t0$t0$a0"
                           cut="116"
                           line="194"
                           loc="Φ.org.eolang.rust-invalid-put.φ.ρ.ρ.α0"
                           pos="8"
                           ref="194">
                            <o as="put"
                               base="put"
                               level="1"
                               loc="Φ.org.eolang.rust-invalid-put.φ.ρ.ρ.α0.α0"
                               ref="179"/>
                        </o>
                        <o base="rust-invalid-put$t1$t0$t0$a1"
                           cut="118"
                           line="196"
                           loc="Φ.org.eolang.rust-invalid-put.φ.ρ.ρ.α1"
                           pos="8"
                           ref="196"/>
                        <o base="org.eolang.nop"
                           line="198"
                           loc="Φ.org.eolang.rust-invalid-put.φ.ρ.ρ.α2"
                           pos="8"/>
                    </o>
                    <o base="org.eolang.int"
                       line="199"
                       loc="Φ.org.eolang.rust-invalid-put.φ.ρ.α0"
                       pos="6">
                        <o base="org.eolang.bytes"
                           data="bytes"
                           loc="Φ.org.eolang.rust-invalid-put.φ.ρ.α0.α0">00 00 00 00 00 00 00 00</o>
                    </o>
                    <o base="org.eolang.int"
                       line="200"
                       loc="Φ.org.eolang.rust-invalid-put.φ.ρ.α1"
                       pos="6">
                        <o base="org.eolang.bytes"
                           data="bytes"
                           loc="Φ.org.eolang.rust-invalid-put.φ.ρ.α1.α0">00 00 00 00 00 00 00 12</o>
                    </o>
                </o>
                <o base="org.eolang.string"
                   line="201"
                   loc="Φ.org.eolang.rust-invalid-put.φ.α0"
                   pos="4">
                    <o base="org.eolang.bytes"
                       data="bytes"
                       loc="Φ.org.eolang.rust-invalid-put.φ.α0.α0">52 75 73 74 20 69 6E 73 65 72 74 20 66 61 69 6C 65 64</o>
                </o>
            </o>
        </o>
        <o abstract=""
           ancestors="1"
           line="189"
           loc="Φ.org.eolang.rust-invalid-put$t0$a2"
           name="rust-invalid-put$t0$a2"
           parent="rust-invalid-put"
           pos="4"/>
        <o abstract=""
           ancestors="1"
           line="194"
           loc="Φ.org.eolang.rust-invalid-put$t1$t0$t0$a0"
           name="rust-invalid-put$t1$t0$t0$a0"
           parent="rust-invalid-put"
           pos="8">
            <o base="put"
               line="195"
               loc="Φ.org.eolang.rust-invalid-put$t1$t0$t0$a0.φ"
               name="@"
               pos="10"
               ref="194.179.460"/>
            <o level="1"
               line="194.179.460"
               loc="Φ.org.eolang.rust-invalid-put$t1$t0$t0$a0.put"
               name="put"/>
        </o>
        <o abstract=""
           ancestors="1"
           line="196"
           loc="Φ.org.eolang.rust-invalid-put$t1$t0$t0$a1"
           name="rust-invalid-put$t1$t0$t0$a1"
           parent="rust-invalid-put"
           pos="8">
            <o line="196"
               loc="Φ.org.eolang.rust-invalid-put$t1$t0$t0$a1.e"
               name="e"
               pos="9"/>
            <o base="e"
               line="197"
               loc="Φ.org.eolang.rust-invalid-put$t1$t0$t0$a1.φ"
               name="@"
               pos="10"
               ref="196"/>
        </o>
        <o abstract=""
           line="203"
           loc="Φ.org.eolang.rust-bind-not-fails"
           name="rust-bind-not-fails"
           original-name="rust-bind-not-fails"
           pos="0">
            <o base="org.eolang.int"
               line="204"
               loc="Φ.org.eolang.rust-bind-not-fails.a"
               name="a"
               pos="2">
                <o base="org.eolang.bytes"
                   data="bytes"
                   loc="Φ.org.eolang.rust-bind-not-fails.a.α0">00 00 00 00 00 00 00 01</o>
            </o>
            <o base="org.eolang.int"
               line="205"
               loc="Φ.org.eolang.rust-bind-not-fails.b"
               name="b"
               pos="2">
                <o base="org.eolang.bytes"
                   data="bytes"
                   loc="Φ.org.eolang.rust-bind-not-fails.b.α0">00 00 00 00 00 00 00 02</o>
            </o>
            <o base="org.eolang.string"
               const=""
               line="206"
               loc="Φ.org.eolang.rust-bind-not-fails.to-check"
               name="to-check"
               pos="2">
                <o base="org.eolang.bytes"
                   data="bytes"
                   loc="Φ.org.eolang.rust-bind-not-fails.to-check.α0">52 75 73 74 20 69 6E 73 65 72 74 20 66 61 69 6C 65 64</o>
            </o>
            <o base=".rust"
               line="207"
               loc="Φ.org.eolang.rust-bind-not-fails.insert"
               name="insert"
               pos="4">
                <o base=".eolang"
                   line="207"
                   loc="Φ.org.eolang.rust-bind-not-fails.insert.ρ"
                   pos="2">
                    <o base=".org"
                       line="207"
                       loc="Φ.org.eolang.rust-bind-not-fails.insert.ρ.ρ"
                       pos="2">
                        <o base="Q"
                           line="207"
                           loc="Φ.org.eolang.rust-bind-not-fails.insert.ρ.ρ.ρ"
                           pos="2"/>
                    </o>
                </o>
                <o base="org.eolang.string"
                   line="208"
                   loc="Φ.org.eolang.rust-bind-not-fails.insert.α0"
                   pos="4">
                    <o base="org.eolang.bytes"
                       data="bytes"
                       loc="Φ.org.eolang.rust-bind-not-fails.insert.α0.α0">75 73 65 20 65 6F 3A 3A 50 6F 72 74 61 6C 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3A 3A 7B 45 4F 49 6E 74 7D 3B 0A 70 75 62 20 66 6E 20 66 6F 6F 28 70 6F 72 74 61 6C 3A 20 26 6D 75 74 20 50 6F 72 74 61 6C 29 20 2D 3E 20 4F 70 74 69 6F 6E 3C 45 4F 3E 20 7B 0A 20 20 6C 65 74 20 76 31 20 3D 20 70 6F 72 74 61 6C 2E 66 69 6E 64 28 22 24 2E 5E 2E 61 22 29 3F 3B 0A 20 20 6C 65 74 20 76 32 20 3D 20 70 6F 72 74 61 6C 2E 66 69 6E 64 28 22 24 2E 5E 2E 62 22 29 3F 3B 0A 20 20 70 6F 72 74 61 6C 2E 62 69 6E 64 28 76 31 20 2C 20 76 32 2C 20 22 45 4F 2D 61 74 74 22 29 3F 3B 0A 20 20 53 6F 6D 65 28 45 4F 49 6E 74 28 30 20 61 73 20 69 36 34 29 29 0A 7D</o>
                </o>
                <o base="rust-bind-not-fails$t3$a2"
                   cut="143"
                   line="219"
                   loc="Φ.org.eolang.rust-bind-not-fails.insert.α1"
                   pos="4"
                   ref="219"/>
                <o base="org.eolang.tuple"
                   line="220"
                   loc="Φ.org.eolang.rust-bind-not-fails.insert.α2"
                   pos="4"/>
            </o>
            <o base="org.eolang.try"
               const=""
               line="221"
               loc="Φ.org.eolang.rust-bind-not-fails.res"
               name="res"
               pos="2">
                <o base="rust-bind-not-fails$t4$a0"
                   cut="146"
                   line="222"
                   loc="Φ.org.eolang.rust-bind-not-fails.res.α0"
                   pos="4"
                   ref="222">
                    <o as="insert"
                       base="insert"
                       level="1"
                       loc="Φ.org.eolang.rust-bind-not-fails.res.α0.α0"
                       ref="207"/>
                </o>
                <o base="rust-bind-not-fails$t4$a1"
                   cut="148"
                   line="224"
                   loc="Φ.org.eolang.rust-bind-not-fails.res.α1"
                   pos="4"
                   ref="224"/>
                <o base="org.eolang.nop"
                   line="226"
                   loc="Φ.org.eolang.rust-bind-not-fails.res.α2"
                   pos="4"/>
            </o>
        </o>
        <o abstract=""
           ancestors="1"
           line="351"
           loc="Φ.org.eolang.rust-bind-to-copy$book"
           name="rust-bind-to-copy$book"
           original-name="book"
           parent="rust-bind-to-copy"
           pos="2">
            <o line="351"
               loc="Φ.org.eolang.rust-bind-to-copy$book.content"
               name="content"
               pos="3"/>
        </o>
        <o abstract=""
           ancestors="1"
           line="367"
           loc="Φ.org.eolang.rust-bind-to-copy$t2$a2"
           name="rust-bind-to-copy$t2$a2"
           parent="rust-bind-to-copy"
           pos="4"/>
    </objects>
    <rusts><!--"Rust inserts"-->
        <rust code="75 73 65 20"
              code_loc="Φ.org.eolang.rust-returns-positive-int.r.α0"><dependencies/></rust>
        <rust code="75 73 65 20 65 6F 3A 3A 50 6F 72 74 61 6C 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3A 3A 7B 45 4F 49 6E 74 7D 3B 0A 0A 70 75 62 20 66 6E 20 66 6F 6F 28 5F 70 6F 72 74 61 6C 3A 20 26 6D 75 74 20 50 6F 72 74 61 6C 29 20 2D 3E 20 4F 70 74 69 6F 6E 3C 45 4F 3E 20 7B 0A 20 20 70 72 69 6E 74 6C 6E 21 28 22 48 65 6C 6C 6F 20 77 6F 72 6C 64 20 66 72 6F 6D 20 72 75 73 74 22 29 3B 0A 20 20 53 6F 6D 65 28 45 4F 49 6E 74 28 2D 31 30 29 29 0A 7D"
              code_loc="Φ.org.eolang.rust-returns-negative-int.r.α0">
            <dependencies/>
        </rust>
        <rust code="75 73 65 20 65 6F 3A 3A 50 6F 72 74 61 6C 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3A 3A 7B 45 4F 46 6C 6F 61 74 7D 3B 0A 0A 70 75 62 20 66 6E 20 66 6F 6F 28 5F 70 6F 72 74 61 6C 3A 20 26 6D 75 74 20 50 6F 72 74 61 6C 29 20 2D 3E 20 4F 70 74 69 6F 6E 3C 45 4F 3E 20 7B 0A 20 20 53 6F 6D 65 28 45 4F 46 6C 6F 61 74 28 31 2E 32 33 34 35 36 37 38 39 29 29 0A 7D"
              code_loc="Φ.org.eolang.rust-returns-positive-double.r.α0">
            <dependencies/>
        </rust>
        <rust code="75 73 65 20 65 6F 3A 3A 50 6F 72 74 61 6C 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3A 3A 7B 45 4F 46 6C 6F 61 74 7D 3B 0A 0A 70 75 62 20 66 6E 20 66 6F 6F 28 5F 70 6F 72 74 61 6C 3A 20 26 6D 75 74 20 50 6F 72 74 61 6C 29 20 2D 3E 20 4F 70 74 69 6F 6E 3C 45 4F 3E 20 7B 0A 20 20 53 6F 6D 65 28 45 4F 46 6C 6F 61 74 28 2D 31 2E 32 33 34 35 36 37 38 39 29 29 0A 7D"
              code_loc="Φ.org.eolang.rust-returns-negative-double.r.α0">
            <dependencies/>
        </rust>
        <rust code="75 73 65 20 65 6F 3A 3A 50 6F 72 74 61 6C 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3A 3A 7B 45 4F 52 61 77 7D 3B 0A 0A 70 75 62 20 66 6E 20 66 6F 6F 28 5F 70 6F 72 74 61 6C 3A 20 26 6D 75 74 20 50 6F 72 74 61 6C 29 20 2D 3E 20 4F 70 74 69 6F 6E 3C 45 4F 3E 20 7B 0A 20 20 53 6F 6D 65 28 0A 45 4F 52 61 77 28 0A 20 20 42 6F 78 3A 3A 66 72 6F 6D 28 0A 5B 30 78 30 30 2C 20 30 78 31 61 2C 20 30 78 45 45 5D 0A 20 20 29 0A 29 0A 20 20 29 0A 7D"
              code_loc="Φ.org.eolang.rust-is-byte-array.my-bytes.α0">
            <dependencies/>
        </rust>
        <rust code="75 73 65 20 65 6F 3A 3A 50 6F 72 74 61 6C 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3A 3A 7B 45 4F 49 6E 74 7D 3B 0A 0A 70 75 62 20 66 6E 20 66 6F 6F 28 70 6F 72 74 61 6C 3A 20 26 6D 75 74 20 50 6F 72 74 61 6C 29 20 2D 3E 20 4F 70 74 69 6F 6E 3C 45 4F 3E 20 7B 0A 20 20 53 6F 6D 65 28 0A 45 4F 49 6E 74 28 70 6F 72 74 61 6C 2E 66 69 6E 64 28 22 24 2E 5E 2E 61 22 29 3F 20 61 73 20 69 36 34 29 0A 20 20 29 0A 7D"
              code_loc="Φ.org.eolang.rust-find-returns-int.r.α0">
            <dependencies/>
        </rust>
        <rust code="75 73 65 20 65 6F 3A 3A 50 6F 72 74 61 6C 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3A 3A 7B 45 4F 56 65 72 74 65 78 7D 3B 0A 0A 70 75 62 20 66 6E 20 66 6F 6F 28 70 6F 72 74 61 6C 3A 20 26 6D 75 74 20 50 6F 72 74 61 6C 29 20 2D 3E 20 4F 70 74 69 6F 6E 3C 45 4F 3E 20 7B 0A 20 20 6C 65 74 20 76 20 3D 20 70 6F 72 74 61 6C 2E 66 69 6E 64 28 22 24 2E 5E 2E 62 6F 6F 6B 22 29 3F 3B 0A 20 20 53 6F 6D 65 28 45 4F 56 65 72 74 65 78 28 76 29 29 0A 7D"
              code_loc="Φ.org.eolang.rust-returns-vertex.read.α0">
            <dependencies/>
        </rust>
        <rust code="75 73 65 20 65 6F 3A 3A 50 6F 72 74 61 6C 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3A 3A 7B 45 4F 53 74 72 69 6E 67 7D 3B 0A 0A 70 75 62 20 66 6E 20 66 6F 6F 28 5F 70 6F 72 74 61 6C 3A 20 26 6D 75 74 20 50 6F 72 74 61 6C 29 20 2D 3E 20 4F 70 74 69 6F 6E 3C 45 4F 3E 20 7B 0A 20 20 53 6F 6D 65 28 45 4F 53 74 72 69 6E 67 28 22 D0 9F D1 80 D0 B8 D0 B2 D0 B5 D1 82 20 77 6F 72 6C 64 22 2E 74 6F 5F 73 74 72 69 6E 67 28 29 29 29 0A 7D"
              code_loc="Φ.org.eolang.rust-is-string.content.α0">
            <dependencies/>
        </rust>
        <rust code="75 73 65 20 65 6F 3A 3A 50 6F 72 74 61 6C 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3A 3A 7B 45 4F 49 6E 74 2C 20 45 4F 45 72 72 6F 72 7D 3B 0A 70 75 62 20 66 6E 20 66 6F 6F 28 70 6F 72 74 61 6C 3A 20 26 6D 75 74 20 50 6F 72 74 61 6C 29 20 2D 3E 20 4F 70 74 69 6F 6E 3C 45 4F 3E 20 7B 0A 20 20 70 6F 72 74 61 6C 2E 70 75 74 28 2D 31 69 33 32 20 61 73 20 75 33 32 2C 20 26 5B 30 78 30 30 2C 20 30 78 31 61 2C 20 30 78 45 45 2C 20 30 78 66 2C 20 30 78 66 33 5D 29 3F 3B 0A 20 20 53 6F 6D 65 28 45 4F 45 72 72 6F 72 28 22 70 75 74 20 66 61 69 6C 65 64 22 2E 74 6F 5F 73 74 72 69 6E 67 28 29 29 29 0A 7D"
              code_loc="Φ.org.eolang.rust-invalid-put.put.α0">
            <dependencies/>
        </rust>
        <rust code="75 73 65 20 65 6F 3A 3A 50 6F 72 74 61 6C 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3A 3A 7B 45 4F 49 6E 74 7D 3B 0A 70 75 62 20 66 6E 20 66 6F 6F 28 70 6F 72 74 61 6C 3A 20 26 6D 75 74 20 50 6F 72 74 61 6C 29 20 2D 3E 20 4F 70 74 69 6F 6E 3C 45 4F 3E 20 7B 0A 20 20 6C 65 74 20 76 31 20 3D 20 70 6F 72 74 61 6C 2E 66 69 6E 64 28 22 24 2E 5E 2E 61 22 29 3F 3B 0A 20 20 6C 65 74 20 76 32 20 3D 20 70 6F 72 74 61 6C 2E 66 69 6E 64 28 22 24 2E 5E 2E 62 22 29 3F 3B 0A 20 20 70 6F 72 74 61 6C 2E 62 69 6E 64 28 76 31 20 2C 20 76 32 2C 20 22 45 4F 2D 61 74 74 22 29 3F 3B 0A 20 20 53 6F 6D 65 28 45 4F 49 6E 74 28 30 20 61 73 20 69 36 34 29 29 0A 7D"
              code_loc="Φ.org.eolang.rust-bind-not-fails.insert.α0">
            <dependencies/>
        </rust>
        <rust code
              code_loc="Φ.org.eolang.rust-copy-not-fails.copy.α0">
            <dependencies/>
        </rust>
        <rust code
              code_loc="Φ.org.eolang.rust-dataize-not-fails.dataized.α0">
            <dependencies/>
        </rust>
        <rust code="75 73 65 20 65 6F 3A 3A 50 6F 72 74 61 6C 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3A 3A 7B 45 4F 49 6E 74 7D 3B 0A 75 73 65 20 62 79 74 65 6F 72 64 65 72 3A 3A 7B 42 69 67 45 6E 64 69 61 6E 2C 20 52 65 61 64 42 79 74 65 73 45 78 74 7D 3B 0A 0A 70 75 62 20 66 6E 20 66 6F 6F 28 70 6F 72 74 61 6C 3A 20 26 6D 75 74 20 50 6F 72 74 61 6C 29 20 2D 3E 20 4F 70 74 69 6F 6E 3C 45 4F 3E 20 7B 0A 20 20 6C 65 74 20 61 20 3D 20 70 6F 72 74 61 6C 2E 66 69 6E 64 28 22 24 2E 5E 2E 61 22 29 3F 3B 0A 20 20 6C 65 74 20 62 79 74 65 73 5F 61 20 3D 20 70 6F 72 74 61 6C 2E 64 61 74 61 69 7A 65 28 61 29 3F 3B 0A 20 20 6C 65 74 20 61 20 3D 20 62 79 74 65 73 5F 61 2E 61 73 5F 73 6C 69 63 65 28 29 2E 72 65 61 64 5F 69 36 34 3A 3A 3C 42 69 67 45 6E 64 69 61 6E 3E 28 29 2E 6F 6B 28 29 3F 3B 0A 0A 20 20 6C 65 74 20 62 20 3D 20 70 6F 72 74 61 6C 2E 66 69 6E 64 28 22 24 2E 5E 2E 62 22 29 3F 3B 0A 20 20 6C 65 74 20 62 79 74 65 73 5F 62 20 3D 20 70 6F 72 74 61 6C 2E 64 61 74 61 69 7A 65 28 62 29 3F 3B 0A 20 20 6C 65 74 20 62 20 3D 20 62 79 74 65 73 5F 62 2E 61 73 5F 73 6C 69 63 65 28 29 2E 72 65 61 64 5F 69 36 34 3A 3A 3C 42 69 67 45 6E 64 69 61 6E 3E 28 29 2E 6F 6B 28 29 3F 3B 0A 20 20 70 72 69 6E 74 6C 6E 21 28 22 73 75 6D 20 35 20 2B 20 31 30 20 3D 20 7B 7D 22 2C 20 61 20 2B 20 62 29 3B 0A 0A 20 20 53 6F 6D 65 28 45 4F 49 6E 74 28 61 20 2B 20 62 29 29 0A 7D"
              code_loc="Φ.org.eolang.rust-plus.plus.α0">
            <dependencies>
                <dependency name="62 79 74 65 6F 72 64 65 72 3A 31 2E 34 2E 33"/>
            </dependencies>
        </rust>
        <rust code="75 73 65 20 65 6F 3A 3A 50 6F 72 74 61 6C 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3A 3A 7B 45 4F 45 72 72 6F 72 7D 3B 0A 0A 70 75 62 20 66 6E 20 66 6F 6F 28 5F 70 6F 72 74 61 6C 3A 20 26 6D 75 74 20 50 6F 72 74 61 6C 29 20 2D 3E 20 4F 70 74 69 6F 6E 3C 45 4F 3E 20 7B 0A 20 20 53 6F 6D 65 28 45 4F 45 72 72 6F 72 28 22 43 75 73 74 6F 6D 20 65 72 72 6F 72 22 2E 74 6F 5F 73 74 72 69 6E 67 28 29 29 29 0A 7D"
              code_loc="Φ.org.eolang.rust-error.err.α0">
            <dependencies/>
        </rust>
        <rust code="75 73 65 20 65 6F 3A 3A 50 6F 72 74 61 6C 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3A 3A 7B 45 4F 56 65 72 74 65 78 2C 20 45 4F 45 72 72 6F 72 7D 3B 0A 0A 70 75 62 20 66 6E 20 66 6F 6F 28 70 6F 72 74 61 6C 3A 20 26 6D 75 74 20 50 6F 72 74 61 6C 29 20 2D 3E 20 4F 70 74 69 6F 6E 3C 45 4F 3E 20 7B 0A 20 20 6C 65 74 20 65 6F 62 79 74 65 73 20 3D 20 70 6F 72 74 61 6C 2E 66 69 6E 64 28 22 51 2E 6F 72 67 2E 65 6F 6C 61 6E 67 2E 62 79 74 65 73 22 29 3F 3B 0A 20 20 6C 65 74 20 63 6F 70 79 20 3D 20 70 6F 72 74 61 6C 2E 63 6F 70 79 28 65 6F 62 79 74 65 73 29 3F 3B 0A 20 20 70 6F 72 74 61 6C 2E 70 75 74 28 63 6F 70 79 2E 63 6C 6F 6E 65 28 29 2C 20 26 5B 30 78 30 30 2C 20 30 78 31 61 2C 20 30 78 45 45 5D 29 3F 3B 0A 20 20 53 6F 6D 65 28 45 4F 56 65 72 74 65 78 28 63 6F 70 79 29 29 0A 7D"
              code_loc="Φ.org.eolang.rust-put-to-copy.data.α0">
            <dependencies/>
        </rust>
        <rust code="75 73 65 20 65 6F 3A 3A 50 6F 72 74 61 6C 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3B 0A 75 73 65 20 65 6F 3A 3A 65 6F 5F 65 6E 75 6D 3A 3A 45 4F 3A 3A 7B 45 4F 56 65 72 74 65 78 7D 3B 0A 0A 70 75 62 20 66 6E 20 66 6F 6F 28 70 6F 72 74 61 6C 3A 20 26 6D 75 74 20 50 6F 72 74 61 6C 29 20 2D 3E 20 4F 70 74 69 6F 6E 3C 45 4F 3E 20 7B 0A 20 20 6C 65 74 20 65 6F 62 6F 6F 6B 20 3D 20 70 6F 72 74 61 6C 2E 66 69 6E 64 28 22 24 2E 5E 2E 62 6F 6F 6B 22 29 3F 3B 0A 20 20 6C 65 74 20 63 6F 70 79 20 3D 20 70 6F 72 74 61 6C 2E 63 6F 70 79 28 65 6F 62 6F 6F 6B 29 3F 3B 0A 20 20 6C 65 74 20 65 6F 6C 69 6E 65 20 3D 20 70 6F 72 74 61 6C 2E 66 69 6E 64 28 22 24 2E 5E 2E 6C 69 6E 65 22 29 3F 3B 0A 20 20 70 6F 72 74 61 6C 2E 62 69 6E 64 28 63 6F 70 79 2E 63 6C 6F 6E 65 28 29 2C 20 65 6F 6C 69 6E 65 2C 20 22 63 6F 6E 74 65 6E 74 22 29 3F 3B 0A 20 20 53 6F 6D 65 28 45 4F 56 65 72 74 65 78 28 63 6F 70 79 29 29 0A 7D"
              code_loc="Φ.org.eolang.rust-bind-to-copy.applied.α0">
            <dependencies/>
        </rust>
    </rusts>
</program>
