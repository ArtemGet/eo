# The MIT License (MIT)
#
# Copyright (c) 2016-2024 Objectionary.com
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
---
tests:
  - /program/objects/o[@base='Q']
  - /program/objects/o[@method and @base='.org']
  - /program/objects/o[@method and @base='.eolang']
  - /program/objects/o[@method and @base='.x']

  - /program/objects/o[@method and @base='.x' and @name='xyz']/o[@base='Q']
  - /program/objects/o[@method and @base='.x' and @name='xyz']/o[@base='.org' and @method]
  - /program/objects/o[@method and @base='.x' and @name='xyz']/o[@base='.eolang' and @method]
  - /program/objects/o[@method and @base='.x' and @name='xyz']/o[@base='.y' and @method and @as='attr']

  - /program/objects/o[@method and @base='.x' and @name='xyz']/o[@abstract and @as='abs']
  - /program/objects/o[@method and @base='.x' and @name='xyz']/o[@abstract and @as='abs']/o[@name='z' and not(@base)]
  - /program/objects/o[@method and @base='.x' and @name='xyz']/o[@abstract and @as='abs']/o[@base='Q']
  - /program/objects/o[@method and @base='.x' and @name='xyz']/o[@abstract and @as='abs']/o[@base='.org' and @method]
  - /program/objects/o[@method and @base='.x' and @name='xyz']/o[@abstract and @as='abs']/o[@base='.eolang' and @method]
  - /program/objects/o[@method and @base='.x' and @name='xyz']/o[@abstract and @as='abs']/o[@base='.w' and @method and @name='@']

  - /program/objects/o[@method and @base='.x' and @name='xyz']/o[@base='.int' and @method and @as='five']
  - /program/objects/o[@method and @base='.x' and @name='xyz']/o[@base='.int' and @method and @as='five']/o[@base='Q']
  - /program/objects/o[@method and @base='.x' and @name='xyz']/o[@base='.int' and @method and @as='five']/o[@base='.org' and @method]
  - /program/objects/o[@method and @base='.x' and @name='xyz']/o[@base='.int' and @method and @as='five']/o[@base='.eolang' and @method]
  - /program/objects/o[@method and @base='.x' and @name='xyz']/o[@base='.int' and @method and @as='five']/o[@base='.bytes' and @method and @as='0']
  - /program/objects/o[@method and @base='.x' and @name='xyz']/o[@base='.int' and @method and @as='five']/o[@base='.bytes' and @method and @as='0']/text()
phi: |-
  {
    ⟦
      xyz ↦ Φ.org.eolang.x(
        attr ↦ Φ.org.eolang.y,
        abs ↦ ⟦
          z ↦ ∅,
          φ ↦ Φ.org.eolang.w
        ⟧,
        five ↦ Φ.org.eolang.int(
          α0 ↦ Φ.org.eolang.bytes(
            Δ ⤍ 00-00-00-00-00-00-00-05
          )
        )
      )
    ⟧
  }
