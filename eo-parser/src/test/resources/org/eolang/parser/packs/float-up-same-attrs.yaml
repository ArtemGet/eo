# The MIT License (MIT)
#
# Copyright (c) 2016-2024 Objectionary.com
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
---
xsls:
  - /org/eolang/parser/optimize/remove-refs.xsl
  - /org/eolang/parser/optimize/abstracts-float-up.xsl
  - /org/eolang/parser/optimize/remove-levels.xsl
  - /org/eolang/parser/add-refs.xsl
  - /org/eolang/parser/clean-up.xsl
tests:
  - /program[count(.//o[@base='build' and not(@ref)])=2]
eo: |
  # This is the default 64+ symbols comment in front of abstract object.
  [] > hello
    # This is the default 64+ symbols comment in front of abstract object.
    [f s] > calc
      plus. > @
        f.next
        s.next
    seq > @
      QQ.io.stdout
        QQ.txt.sprintf
          "Result is %d\n"
          calc
            []
              # This is the default 64+ symbols comment in front of abstract object.
              [x] > build
                x.plus 1 > @
                build (@.plus 1) > next
              build 1 > @
            []
              # This is the default 64+ symbols comment in front of abstract object.
              [y] > build
                y.plus 2 > @
                build (@.plus 2) > next
              build 2 > @
      true
