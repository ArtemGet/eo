xsls:
  - /org/eolang/parser/optimize/abstracts-float-up.xsl
  - /org/eolang/parser/optimize/remove-levels.xsl
tests:
  - /program/errors[count(*)=0]
  # 'another' object
  - //o[@name='another']
  - //o[@name='another']/o[@base='eq.' and @name='@']
  - //o[@name='another']/o[@base='eq.' and @name='@']/o[@base='another$t0$first' and @name='first']
  - //o[@name='another']/o[@base='eq.' and @name='@']/o[@base='another$t0$second' and @name='second']
  # 'another$t0$first' object
  - //o[@name='another$t0$first' and count(o)=1]
  - //o[@name='another$t0$first']/o[@base='1' and @name='@']
  # 'another$t0$second' object
  - //o[@name='another$t0$second' and count(o)=1]
  - //o[@name='another$t0$second']/o[@base='2' and @name='@']
skip: true
# Currently the test converts the code from the snippet to:
# ____
#
# [] > another
#   eq. > @
#     another$t0$first > first
#       second
#     another$t0$second > second
#       first
#
# [second] > another$t0$first
#   1 > @
#
# [first] > another$t0$second
#   2 > @
# ____
# Which actually looks strange.

# @todo #2131:90min Remove redundant objects and levels.
#  It's better to remove redundant objects from the result code snippet.
#  They create some problems in the future transformations.
#  When the transformation is fixed we can enable the test.
#  The test should convert the code from the snippet to the next:
# ____
# [] > another
#   eq. > @
#     another$t0$first > first
#     another$t0$second > second
#
# [] > another$t0$first
#   1 > @
#
# [] > another$t0$second
#   2 > @
# ____

eo: |
  [] > another
    eq. > @
      [] > first
        1 > @
      [] > second
        2 > @