# The MIT License (MIT)
#
# Copyright (c) 2016-2022 Yegor Bugayenko
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

+package org.eolang.math
+home https://github.com/objectionary/eo
+version 0.0.0
+rt jvm org.eolang:eo-runtime:0.0.0

[n] > number

  # Checking type of the number's decorator.
  # If x is int, returns 1, otherwise 1.0 (as float).
  [] > type
    if. > @
      eq.
        div.
          ^.n
          ^.n
        1
      1
      1.0

  [x] > xor
    if. > @
      eq.
        type
        1
      as-int.
        xor.
          ^.n.as-bytes
          x.as-bytes
      []
        "xor cannot be applied to float" > msg

  [x] > or
    if. > @
      eq.
        type
        1
      as-int.
        or.
          ^.n.as-bytes
          x.as-bytes
      []
        "or cannot be applied to float" > msg

  [x] > and
    if. > @
      eq.
        type
        1
      as-int.
        and.
          ^.n.as-bytes
          x.as-bytes
      []
        "and cannot be applied to float" > msg

  # Calculate bitwise left shift
  [x] > left
    if. > @
      eq.
        type
        1
      as-int.
        left.
          ^.n.as-bytes
          x
      []
        "left cannot be applied to float" > msg

  # Calculate bitwise right shift
  [x] > right
    if. > @
      eq.
        type
        1
      as-int.
        right.
          ^.n.as-bytes
          x
      []
        "right cannot be applied to float" > msg

  # Tests that $ â‰  x
  [x] > neq
    (^.n.eq x).not > @





