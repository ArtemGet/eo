# The MIT License (MIT)
#
# Copyright (c) 2016-2022 Yegor Bugayenko
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

+package org.eolang
+rt jvm org.eolang:eo-runtime:0.0.0

[] > string
  # Is true if both objects are equal
  [x] > eq
    eq. > @
      ^.as-bytes
      x.as-bytes

  # Get the length of it
  [] > length /int

  # Trim it from both sides
  [] > trim /string

  # Make an integer out of this string
  [] > as-int /int

  # Make a float out of this string
  [] > as-float /float

  # Take a char from the given position
  [p] > char-at /char

  # Turn it into bytes.
  [] > as-bytes /bytes

  # Joins an array of strings, using current string
  # as a delimiter
  [items] > joined /string

  # Converts this to hash
  [] > as-hash /int

  # Converts this to regex
  [] > as-regex
    ^.as-regexf 0 > @

  # Converts this to regex with flag value as:
  # 0x01 - Enables Unix lines mode.
  # 0x02 - Enables case-insensitive matching.
  # 0x04 - Permits whitespace and comments in pattern.
  # 0x08 - Enables multiline mode.
  # 0x10 - Enables literal parsing of the pattern.
  # 0x20 - Enables dotall mode.
  # 0x40 - Enables Unicode-aware case folding.
  # 0x80 - Enables canonical equivalence.
  # 0x100 - Enables the Unicode version of Predefined character classes and POSIX character classes.
  [flag] > as-regexf /regex
