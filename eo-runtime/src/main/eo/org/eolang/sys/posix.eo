# The MIT License (MIT)
#
# Copyright (c) 2016-2024 Objectionary.com
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

+architect yegor256@gmail.com
+home https://github.com/objectionary/eo
+package org.eolang.sys
+rt jvm org.eolang:eo-runtime:0.0.0
+rt node eo2js-runtime:0.0.0
+version 0.0.0

# Makes a Unix syscall by name with POSIX interface.
# See https://filippo.io/linux-syscall-table/
#
# Supported syscalls:
# 1. getpid - get process identification
#    - Arguments:
#    - Returns:
#      * code - process identification number (number)
#      * output - []
# 2. write - write bytes to file descriptor
#    - Arguments:
#      * descriptor (number)
#      * buffer to write (bytes)
#      * buffer size to write (number)
#    - Returns:
#      * code - written bytes count (number)
#      * output - []
# 3. read - read bytes from file descriptor
#    - Arguments:
#      * descriptor (number)
#      * buffer size to read (number)
#    - Returns:
#      * code - read bytes count (number)
#      * output - read bytes (bytes)
[name args] > posix
  0 > stdin-fileno
  1 > stdout-fileno

  [] > @ /return

  [code output] > return
    $ > called
    output > @
