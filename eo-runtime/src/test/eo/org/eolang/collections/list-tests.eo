# The MIT License (MIT)
#
# Copyright (c) 2016-2022 Yegor Bugayenko
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

+package org.eolang
+home https://github.com/objectionary/eo
+version 0.0.0
+alias org.eolang.math.number
+alias org.eolang.collections.list
+alias org.eolang.hamcrest.assert-that
+junit

# check that list.is-empty works properly
[] > should-not-be-empty
  * > xs
    1
    2
  assert-that > @
    (list xs).is-empty.not
    $.equal-to TRUE

# check that list.is-empty works properly
[] > should-be-empty
  * > xs
  assert-that > @
    (list xs).is-empty
    $.equal-to TRUE

# arrays of objects
[] > should-not-be-empty-with-3-objects
  [x] > a-1
    ((number x).as-int > @)
  [x] > a-2
    (x.as-byte > @)
  [x] > a-3
    ((number x).as-string > @)
  * > xs
    a-1
    a-2
    a-3
  assert-that > @
    (list xs).is-empty.not
    $.equal-to TRUE

# arrays with anonymous object
[] > should-not-be-empty-with-1-anon-object
  * > xs
    [f]
      (number f).as-int > @
  assert-that > @
    (list xs).is-empty.not
    $.equal-to TRUE

# arrays with anonymous one-line-object
[] > should-not-be-empty-with-1-anon-object-one-liner
  * > xs
    [f] ((number f).as-int > @)
  assert-that > @
    (list xs).is-empty.not
    $.equal-to TRUE

# reduce with index test
[] > reduce-with-index-test
  * 2 2 > src
  assert-that > @
    reducei.
      list * 1 1
      0
      [a i x]
        plus. > @
          x
          a.plus
            src.at i
    $.equal-to 6

[] > reducei-long-int-array
  assert-that > @
    reducei.
      list * 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
      0
      [a i x]
        plus. > @
          x
          a
    $.equal-to 435

[] > reducei-bools-array
  assert-that > @
    reducei.
      list * TRUE TRUE FALSE
      TRUE
      [a i x]
        and. > @
          x
          a
    $.equal-to FALSE

[] > reducei-nested-functions
  [] > a
    10 > @
  [] > b
    500 > @
  assert-that > @
    reducei.
      list * a b
      0
      [acc i x]
        check x > @
        [el] > check
          if. > @
            x.lt 100
            acc.plus x
            acc.minus x
    $.equal-to
      plus.
        0.minus 500
        10
